{"version":3,"sources":["components/Navbar.js","components/Movies.js","components/FavoriteMovies.js","components/Details.js","App.js","index.js"],"names":["Navbar","className","activeClassName","to","Movies","moviesList","addToFavorite","showDetails","length","map","movie","src","poster_path","alt","title","vote_average","onClick","id","FavoriteMovies","favMovies","removeFavorite","Details","data","useState","movieId","setMovieId","genres","setGenres","useEffect","fetch","then","res","json","movieData","result","videos","results","key","genreArray","original_language","release_date","genre","name","adult","overview","target","rel","href","BASE_URL","App","isLoaded","setIsLoaded","error","setError","setMoviesList","favorites","setFavorites","details","setDetails","catch","err","moviesFav","JSON","parse","localStorage","getItem","saveMoviesToLocalStorage","movies","setItem","stringify","exact","path","newFavList","alert","window","confirm","filter","fav","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.383f91b0.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className=\"Navbar\" >\r\n      <li>\r\n        <NavLink activeClassName=\"active\" to=\"/\"> Home</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink activeClassName=\"active\" to=\"/favorites\">Favorites</NavLink>\r\n      </li>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst getImg = \"https://image.tmdb.org/t/p/original/\"\r\n\r\nconst Movies = ({ moviesList, addToFavorite, showDetails }) => {\r\n\r\n  return (\r\n    <>\r\n      <h1>Most Popular Movies Right Now</h1>\r\n      <div className=\"movies\" >\r\n        {moviesList.length > 0 && moviesList.map((movie) => (\r\n          <div key={movie.id} className=\"card\" >\r\n            <img src={getImg + movie.poster_path} alt={movie.title} />\r\n            <h2>{movie.title} <span>{movie.vote_average} <i className=\"fas fa-star\"></i></span></h2>\r\n            <div className=\"buttons\" >\r\n              <NavLink className=\"btn\" to=\"/details\" onClick={() => showDetails(movie)} >Details</NavLink>\r\n              <button onClick={() => addToFavorite(movie)} className=\"btn\" >Add to favorite</button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Movies\r\n","import React from 'react'\r\n\r\n\r\nconst getImg = \"https://image.tmdb.org/t/p/original/\"\r\n\r\n\r\nconst FavoriteMovies = ({ favMovies, removeFavorite }) => {\r\n\r\n  if (!favMovies.length) {\r\n    return <h2 className=\"heading\">Your favorite movies will appear here</h2>\r\n  } else {\r\n    return (\r\n      <div className=\"movies\" >\r\n        {favMovies.length > 0 && favMovies.map((movie) => (\r\n          <div key={movie.id} className=\"card\" >\r\n            <img src={getImg + movie.poster_path} alt={movie.title} />\r\n            <h2>Movie: {movie.title} <span>{movie.vote_average}*</span></h2>\r\n            <div className=\"buttons\" >\r\n              <button onClick={() => removeFavorite(movie)} className=\"btn\" >Remove</button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FavoriteMovies\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nconst getImg = \"https://image.tmdb.org/t/p/original/\"\r\n\r\nconst Details = ({ data }) => {\r\n  const [movieId, setMovieId] = useState()\r\n  const [genres, setGenres] = useState([])\r\n\r\n  useEffect(() => {\r\n    fetch(`https://api.themoviedb.org/3/movie/${data.id}?api_key=4e44d9029b1270a757cddc766a1bcb63&append_to_response=videos`)\r\n      .then(res => res.json())\r\n      .then((movieData) => {\r\n        const result = movieData.videos.results[1].key\r\n        const genreArray = movieData.genres\r\n        setGenres(genreArray)\r\n        setMovieId(result)\r\n      })\r\n  }, [data.id])\r\n\r\n\r\n  return (\r\n    <div className=\"details\" >\r\n      <div className=\"data\" >\r\n        <h3>Movie: {data.title}</h3>\r\n        <h4>Language: {data.original_language}</h4>\r\n        <h4>Rating: {data.vote_average}</h4>\r\n        <h4>Release Date: {data.release_date}</h4>\r\n        <h4>Genre: {genres.map((genre) => (\r\n          <span key={genre.id} >{genre.name}, </span>\r\n        ))}\r\n        </h4>\r\n        <h4>Adult Content: {data.adult ? 'Yes' : 'No'}</h4>\r\n        <h4>Overview: </h4><p>{data.overview}</p>\r\n        <a className=\"btn\" target=\"_blank\" rel=\"noreferrer\" href={`https://www.youtube.com/watch?v=${movieId}`}>Preview</a>\r\n      </div>\r\n      <img src={getImg + data.poster_path} alt={data.title} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Details\r\n","import React, { useState, useEffect } from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\n\nimport Navbar from \"./components/Navbar\"\nimport Movies from './components/Movies'\nimport FavoriteMovies from './components/FavoriteMovies'\nimport Details from './components/Details'\n\n\nconst API_KEY = '4e44d9029b1270a757cddc766a1bcb63'\n\nconst BASE_URL = `https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US&page=1`\n\nfunction App() {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState()\n  const [moviesList, setMoviesList] = useState([]);\n  const [favorites, setFavorites] = useState([])\n  const [details, setDetails] = useState({})\n\n  useEffect(() => {\n    fetch(BASE_URL)\n      .then(res => res.json())\n      .then(data => {\n        setIsLoaded(true)\n        setMoviesList(data.results)\n      }\n      )\n      .catch(err => setError(err))\n  }, [])\n\n  //******To save the movies in local storage so that even if we refresh the page data is not lost**********----->>>\n  useEffect(() => {\n    const moviesFav = JSON.parse(localStorage.getItem('favorites-movies'))\n    setFavorites(moviesFav)\n  }, [])\n\n  const saveMoviesToLocalStorage = (movies) => {\n    localStorage.setItem('favorites-movies', JSON.stringify(movies));\n  }\n\n  const addToFavorite = (movie) => {\n    const newFavList = [...favorites, movie]\n    setFavorites(newFavList)\n    saveMoviesToLocalStorage(newFavList)\n    alert(`${movie.title} successfully added to your favorites`)\n  }\n\n  const removeFavorite = (movie) => {\n    const flag = window.confirm(`Do you want to remove ${movie.title} from favorites`)\n    if (flag) {\n      const newFavList = favorites.filter((fav) => fav.id !== movie.id)\n      setFavorites(newFavList)\n      saveMoviesToLocalStorage(newFavList)\n    }\n    else {\n      return\n    }\n    // alert(``)\n  }\n\n  // ****** To get the details of the movie ******----->>>\n  const showDetails = (movie) => {\n    const movieData = movie\n    setDetails(movieData);\n  }\n\n\n  if (!isLoaded) {\n    return <h5>Loading.....</h5>\n  } else if (error) {\n    return <h5>{error}</h5>\n  } else {\n    return (\n      <>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" >\n            <Movies moviesList={moviesList} addToFavorite={addToFavorite} showDetails={showDetails} />\n          </Route>\n          <Route exact path=\"/favorites\" >\n            <FavoriteMovies favMovies={favorites} removeFavorite={removeFavorite} />\n          </Route>\n          <Route>\n            <Details exact path=\"/details\" data={details} />\n          </Route>\n        </Switch>\n      </>\n    );\n  }\n}\n\nexport default App;\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);"],"sourceRoot":""}